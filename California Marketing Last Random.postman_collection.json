{
	"info": {
		"_postman_id": "07172620-48d2-4b6f-89b9-e3987c21a7c5",
		"name": "California Marketing Last Random",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21529180"
	},
	"item": [
		{
			"name": "Create new postal address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"// !! del\r",
							"// let JsonData=pm.response.json();\r",
							"// pm.environment.set(\"ID\", JsonData.id);\r",
							"\r",
							"// pm.test(\"ID is correct\", function () {\r",
							"//     pm.expect(JsonData.id).to.eq(pm.environment.get(\"ID\"));;\r",
							"// });\r",
							"// !! del\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"ID\", jsonData.id);\r",
							"\r",
							"pm.test(\"ID is correct\", function () {\r",
							"    pm.expect(jsonData.id).to.eq(pm.environment.get(\"ID\"));;\r",
							"});\r",
							"\r",
							"switch (responseCode.code) {\r",
							"    case 200:\r",
							"        tests[\"200 ok. The request has succeeded\"] = true;\r",
							"        break;\r",
							"    case 404:\r",
							"        tests[\"404 Not found\"] = false;\r",
							"        break;\r",
							"    case 400:\r",
							"        tests[\"400 Bad Request\"] = false;\r",
							"        break;\r",
							"    case 401:\r",
							"        tests[\"401 BUnauthorized\"] = false;\r",
							"        break;\r",
							"    case 500:\r",
							"        tests[\"500 Internal Server Error\"] = false;\r",
							"        break;\r",
							"    case 503:\r",
							"        tests[\"503 Server unavailable\"] = false;\r",
							"        break;\r",
							"    case 502:\r",
							"        tests[\"502 bad gateway\"] = false;\r",
							"        break;\r",
							"    case 599:\r",
							"        tests[\"599 Network connect timeout error\"] = false;\r",
							"        break;\r",
							"    case 408:\r",
							"        tests[\"408 Request is timeout\"] = false;\r",
							"        break;\r",
							"    default:\r",
							"        tests[\"Sorry, we are out of\" + responseCode.code] = false;\r",
							"}\r",
							"\r",
							"if(responseCode.code === 200) {\r",
							"    tests[\"Backend is available, response code is 200\"] = true;\r",
							"} else if (responseCode.code === 401) {\r",
							"    tests[\"Not authorised, check access token or Log in\"] = false;\r",
							"} else if (responseCode.code === 403) {\r",
							"    tests[\"Forbiden\"] = false;\r",
							"} else if (responseCode.code === 404) {\r",
							"    tests[\"Not Found. Check if you made correct request\"] = false;\r",
							"} else if (responseCode.code === 422) {\r",
							"    tests[\"he instance is not valid\"] = false;\r",
							"} else {\r",
							"    tests[\"Something went wrong. Check response body\"] = false;\r",
							"}\r",
							"pm.test(\"Response Size is less than 1000 B\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.clear();\r",
							"pm.environment.unset(\"ID\");\r",
							"// pm.environment.set(\"ID\",\"4f6f5e44-b804-4640-b714-f48d559eb20f\");\r",
							"//returns a random integer from 10000 to 90000 with 5 digits\r",
							"pm.environment.set(\"ZipCode\",Math.floor(Math.random()*90000) + 10000);\r",
							"//returns a random integer from 100 to 900 with 3 digits\r",
							"pm.environment.set(\"AddressLine2\", Math.floor(Math.random()*900) + 100);\r",
							"const stateAbbreviations = [\r",
							" 'AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',\r",
							" 'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',\r",
							" 'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',\r",
							" 'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',\r",
							" 'VT','VI','VA','WA','WV','WI','WY'\r",
							"];\r",
							"const randomState = stateAbbreviations[Math.floor(Math.random() * stateAbbreviations.length)];\r",
							"pm.environment.set(\"SubDivision\", randomState);\r",
							"// pm.environment.set(\"FirstName\", \"Dmitry\");\r",
							"\r",
							"// Using Faker lib https://learning.postman.com/docs/writing-scripts/script-references/variables-list/\r",
							"let fName = pm.variables.replaceIn('{{$randomFirstName}}')\r",
							"pm.environment.set(\"FirstName\", fName);\r",
							"let lName = pm.variables.replaceIn('{{$randomLastName}}')\r",
							"pm.environment.set(\"LastName\", lName);\r",
							"let co = pm.variables.replaceIn('{{$randomCompanyName}}')\r",
							"pm.environment.set(\"Company\", co);\r",
							"let addrLn1 = pm.variables.replaceIn('{{$randomStreetAddress}}')\r",
							"pm.environment.set(\"AddressLine1\", addrLn1);\r",
							"let cty = pm.variables.replaceIn('{{$randomCity}}')\r",
							"pm.environment.set(\"City\", cty);\r",
							"let cntry = pm.variables.replaceIn('{{$randomCountry}}')\r",
							"pm.environment.set(\"Country\", cntry);\r",
							"let phoneNum = pm.variables.replaceIn('{{$randomPhoneNumber}}')\r",
							"pm.environment.set(\"PhoneNumber\", phoneNum);\r",
							"// pm.environment.unset(\"ID\");\r",
							"// pm.environment.unset(\"company\");\r",
							"// pm.environment.set(\"company\", new Date().getTime());\r",
							"// pm.environment.set(\"FN\", \"Conradid\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "IA-BAE7GJlo8MXJZdpRe2lJvabrYYUaZHqD159O6aZE.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA2LTE4VDExOjE3OjExLjMzM1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNi0xOFQxNToxNzoxMS4zMzNaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"fullName\": {\r\n            \"firstName\": \"{{FirstName}}\",\r\n            \"lastName\": \"{{LastName}}\"\r\n        },\r\n        \"company\": \"{{Company}}\",\r\n        \"taxInfo\": {\r\n            \"id\": \"{{ID}}\",\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"{{AddressLine1}}\",\r\n        \"addressLine2\": \"{{AddressLine2}}\",\r\n        \"street\": {\r\n            \"name\": \"Ohoho st\",\r\n            \"number\": \"9\"\r\n        },\r\n        \"city\": \"{{City}}\",\r\n        \"country\": \"{{Country}}\",\r\n        \"subdivision\": \"{{SubDivision}}\",\r\n        \"zipCode\": \"{{ZipCode}}\",\r\n        \"phoneNumber\": \"{{PhoneNumber}}\",\r\n        \"location\": null\r\n    },\r\n    \"setAsDefault\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Make default",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"{{ID}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/default",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show all postal addresses",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show New Created postal address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ID is correct\", function () {\r",
							"    const jsonData=pm.response.json();\r",
							"    pm.expect(jsonData.address.id).to.eq(pm.environment.get(\"ID\"));\r",
							"    //pm.expect(jsonData.address.fullName.firstName).to.eql(pm.environment.get(\"FirstName\"));\r",
							"    //pm.expect(jsonData.address.fullName.lastName).to.eql(pm.environment.get(\"LastName\"));\r",
							"    //pm.expect(jsonData.fullName.firstName).to.eq(pm.environment.get(\"FirstName\"));\r",
							"});\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"FirstName\", jsonData.firstName);\r",
							"\r",
							"pm.test(\"FirstName is correct\", function () {\r",
							"    pm.expect(jsonData.firstName).to.eq(pm.environment.get(\"FirstName\"));\r",
							"});\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"LastName\", jsonData.lastName);\r",
							"\r",
							"pm.test(\"Last Name is correct\", function () {\r",
							"    pm.expect(jsonData.lastName).to.eq(pm.environment.get(\"LastName\"));\r",
							"});\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"Country\", jsonData.country);\r",
							"\r",
							"pm.test(\"Country is correct\", function () {\r",
							"    pm.expect(jsonData.country).to.eq(pm.environment.get(\"Country\"));\r",
							"});\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable(\"City\", jsonData.city);\r",
							"\r",
							"pm.test(\"City is correct\", function () {\r",
							"    pm.expect(jsonData.city).to.eq(pm.environment.get(\"City\"));\r",
							"});\r",
							"\r",
							"\r",
							"// pm.test(\"First NAME\", function () {\r",
							"//    var jsonData = pm.response.json();\r",
							"//    pm.expect(jsonData.address.fullName.firstName).to.eql(\"Conrad\");\r",
							" //   pm.expect(jsonData.address.fullName.lastName).to.eql(\"Colgate\");\r",
							"//});\r",
							"\r",
							"// pm.test(\"Check Zip code\", function () {\r",
							"//    var jsonData = pm.response.json();\r",
							"//    pm.expect(jsonData.address.zipCode).to.eql(\"6819212\");\r",
							"//    pm.expect(jsonData.address.city).to.eql(\"Tel Aviv-Yafo\");\r",
							"// });\r",
							"\r",
							"//pm.test(\"Respose body must to in current format\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData.addresses.fullName.firstName).to.be.a(\"string\");\r",
							"    //pm.expect(jsonData.addresses).to.be.a(\"object\");\r",
							"//});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					],
					"query": [
						{
							"key": "id",
							"value": "{{ID}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit postal address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Size is less than 1000 B\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Response code must to correct\", function () {\r",
							"    pm.response.to.not.to.be.error;\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"    pm.response.to.not.have.jsonBody(\"error\");\r",
							"    pm.response.to.have.jsonBody();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"FirstName\", \"Andre\")\r",
							"\r",
							"pm.environment.set(\"LastName\", \"Tommas\")\r",
							"\r",
							"pm.environment.set(\"Company\", \"YAHOO-\" + new Date().getTime())\r",
							"\r",
							"pm.environment.set(\"ZipCode\", Math.floor(Math.random()*90000) + 10000)\r",
							"\r",
							"pm.environment.set(\"AddressLine2\", Math.floor(Math.random()*900) + 100)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": {\r\n        \"id\": \"{{ID}}\",\r\n        \"fullName\": {\r\n            \"firstName\": \"{{FirstName}}\",\r\n            \"lastName\": \"{{LastName}}\"\r\n        },\r\n        \"company\": \"{{Company}}\",\r\n        \"taxInfo\": {\r\n            \"id\": null,\r\n            \"type\": null\r\n        },\r\n        \"addressLine1\": \"{{AddressLine1}}\",\r\n        \"addressLine2\": \"{{AddressLine2}}\",\r\n        \"street\": {\r\n            \"name\": null,\r\n            \"number\": null\r\n        },\r\n        \"city\": \"{{City}}\",\r\n        \"country\": \"{{Country}}\",\r\n        \"subdivision\": \"{{SubDivision}}\",\r\n        \"zipCode\": \"{{ZipCode}}\",\r\n        \"phoneNumber\": \"{{PhoneNumber}}\"\r\n    },\r\n    \"setAsDefault\": false,\r\n    \"fieldMask\": {\r\n        \"paths\": [\r\n            \"fullName.firstName\",\r\n            \"fullName.lastName\",\r\n            \"company\",\r\n            \"addressLine1\",\r\n            \"addressLine2\",\r\n            \"city\",\r\n            \"country\",\r\n            \"subdivision\",\r\n            \"zipCode\",\r\n            \"phoneNumber\",\r\n            \"setAsDefault\"\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Show CHANGED postal address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"switch (responseCode.code) {\r",
							"    case 200:\r",
							"        tests[\"200 ok. The request has succeeded\"] = true;\r",
							"        break;\r",
							"    case 404:\r",
							"        tests[\"404 Not found\"] = false;\r",
							"        break;\r",
							"    case 400:\r",
							"        tests[\"400 Bad Request\"] = false;\r",
							"        break;\r",
							"    case 401:\r",
							"        tests[\"401 BUnauthorized\"] = false;\r",
							"        break;\r",
							"    case 500:\r",
							"        tests[\"500 Internal Server Error\"] = false;\r",
							"        break;\r",
							"    case 503:\r",
							"        tests[\"503 Server unavailable\"] = false;\r",
							"        break;\r",
							"    case 502:\r",
							"        tests[\"502 bad gateway\"] = false;\r",
							"        break;\r",
							"    case 599:\r",
							"        tests[\"599 Network connect timeout error\"] = false;\r",
							"        break;\r",
							"    case 408:\r",
							"        tests[\"408 Request is timeout\"] = false;\r",
							"        break;\r",
							"    default:\r",
							"        tests[\"Sorry, we are out of\" + responseCode.code] = false;\r",
							"}\r",
							"\r",
							"if(responseCode.code === 200) {\r",
							"    tests[\"Backend is available, response code is 200\"] = true;\r",
							"} else if (responseCode.code === 401) {\r",
							"    tests[\"Not authorised, check access token or Log in\"] = false;\r",
							"} else if (responseCode.code === 403) {\r",
							"    tests[\"Forbiden\"] = false;\r",
							"} else if (responseCode.code === 404) {\r",
							"    tests[\"Not Found. Check if you made correct request\"] = false;\r",
							"} else if (responseCode.code === 422) {\r",
							"    tests[\"he instance is not valid\"] = false;\r",
							"} else {\r",
							"    tests[\"Something went wrong. Check response body\"] = false;\r",
							"}\r",
							"pm.test(\"Response Size is less than 1000 B\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"CHECK First NAME and Last Name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.eql(\"Andre\");\r",
							"    pm.expect(jsonData.address.fullName.lastName).to.eql(\"Tommas\");\r",
							"});\r",
							"\r",
							"// Check other changed values\r",
							"pm.test(\"Check Company, ZipCode and AddressLine2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.company).to.eql(pm.environment.get(\"Company\"));\r",
							"    pm.expect(jsonData.address.zipCode).to.eql('' + pm.environment.get(\"ZipCode\"));\r",
							"    pm.expect(jsonData.address.addressLine2).to.eql('' + pm.environment.get(\"AddressLine2\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Respose body must to in current format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.address.fullName.firstName).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.address.fullName).to.be.a(\"object\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Text Include\", function () {\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include(\"company\", \"Go Ho LTD\");\r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete postal adress",
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check DELETED postal addresses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([400]);\r",
							"});\r",
							"pm.test(\"Response time is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response Size is less than 2000 B\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"//pm.test(\"ID can't finded\", function () {\r",
							"//    var jsonData = pm.response.json();\r",
							"    \r",
							"//    pm.expect(jsonData.details.cant_find).to.eql(\"address_id: 5c384602-1be0-47f4-a074-c725d1e8f7a9\");\r",
							"//});\r",
							"\r",
							"\r",
							"pm.test(\"Respose body must to in current format\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
							"    pm.expect(jsonData.details).to.be.a(\"object\");\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Text Include\", function () {\r",
							"    \r",
							"    pm.expect(pm.response.text()).to.include(\"cant_find\", \"address_id: {{ID}}\");\r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "_N1bWnThBV8fRdBSx0kgPrV6_FAnko4vcrw5c3HFIu8.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA3LTA5VDA4OjM1OjI3LjAyN1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNy0wOVQxMjozNToyNy4wMjdaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://addresses.wixapps.net/_api/addresses-web/v1/addresses/{{ID}}",
					"protocol": "https",
					"host": [
						"addresses",
						"wixapps",
						"net"
					],
					"path": [
						"_api",
						"addresses-web",
						"v1",
						"addresses",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "IA-BAE7GJlo8MXJZdpRe2lJvabrYYUaZHqD159O6aZE.eyJpbnN0YW5jZUlkIjoiZjQ2Y2Q1MDItZjcyZi00NGY3LTk2MzgtNWRhMWRlYjBiNGU3IiwiYXBwRGVmSWQiOiIxNTA1Yjc3NS1lODg1LWViMWItYjY2NS0xZTQ4NWQ5YmY5MGUiLCJtZXRhU2l0ZUlkIjoiMjhiNzkzZDYtNTQyNC00MDU4LTgwNDktMDI2YTRkYjAyODJmIiwic2lnbkRhdGUiOiIyMDIyLTA2LTE4VDExOjE3OjExLjMzM1oiLCJ1aWQiOiI3ZTAxZGY5ZS0zMjdjLTRlMTMtYWQzMy04NDE2NzQzZTY0ZWIiLCJkZW1vTW9kZSI6ZmFsc2UsImFpZCI6IjhjNjk0MjM1LWU1NGQtNGVlOS05OTNkLWJhMWNlZDFiOTUyNiIsImJpVG9rZW4iOiJkY2RiNDZkNC1hMzBiLTA0YWYtMTY3MS01ZmNiOTMwMDljYzgiLCJzaXRlT3duZXJJZCI6ImY5MTRmMTFjLWFhYjMtNDUyNy04ZDRlLWJhYjc2MjE0M2E2MCIsImV4cGlyYXRpb25EYXRlIjoiMjAyMi0wNi0xOFQxNToxNzoxMS4zMzNaIiwiaGFzVXNlclJvbGUiOmZhbHNlfQ",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}